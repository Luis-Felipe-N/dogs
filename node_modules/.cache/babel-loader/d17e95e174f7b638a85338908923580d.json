{"ast":null,"code":"var _jsxFileName = \"/home/luis/projetos/dogs/src/context/UserContext.tsx\";\nimport { createContext } from 'react';\nimport { GET_USER, TOKEN_POST } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport default function UserStorage({\n  children\n}) {\n  const getUser = async token => {\n    const {\n      url,\n      options\n    } = GET_USER(token);\n    const response = await fetch(url, options);\n    const json = await response.json();\n    console.log(json);\n  };\n\n  const userLogin = async user => {\n    const {\n      url,\n      options\n    } = TOKEN_POST(user);\n    const response = await fetch(url, options);\n    const {\n      token\n    } = await response.json();\n    localStorage.setItem('token', token);\n    getUser(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c = UserStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStorage\");","map":{"version":3,"sources":["/home/luis/projetos/dogs/src/context/UserContext.tsx"],"names":["createContext","GET_USER","TOKEN_POST","UserContext","UserStorage","children","getUser","token","url","options","response","fetch","json","console","log","userLogin","user","localStorage","setItem"],"mappings":";AAAA,SAASA,aAAT,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;;AAcA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;AAGP,eAAe,SAASI,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAmD;AAG9D,QAAMC,OAAO,GAAG,MAAOC,KAAP,IAAyB;AACrC,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBR,QAAQ,CAACM,KAAD,CAAjC;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GALD;;AAQA,QAAMG,SAAS,GAAG,MAAQC,IAAR,IAAkB;AAChC,UAAM;AAAER,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBP,UAAU,CAACc,IAAD,CAAnC;AAGA,UAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAM;AAACF,MAAAA;AAAD,QAAW,MAAMG,QAAQ,CAACE,IAAT,EAAvB;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;AACAD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACH,GARD;;AAUA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACQ,MAAAA;AAAD,KAA7B;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;KAzBuBD,W","sourcesContent":["import { createContext, ReactNode } from 'react'\nimport { GET_USER, TOKEN_POST } from '../utils/api'\n\n\ntype UserStorageProps = {\n    children: ReactNode\n}\n\n\ntype UserLoginType = {\n    username: string,\n    password: string\n}\n\n\nexport const UserContext = createContext({} as any)\n\n\nexport default function UserStorage({children}: UserStorageProps) {\n\n\n    const getUser = async (token: string) => {\n        const { url, options } = GET_USER(token)\n        const response = await fetch(url, options)\n        const json = await response.json()\n        console.log(json)\n    }\n\n\n    const userLogin = async ( user ) => {\n        const { url, options } = TOKEN_POST(user)\n\n\n        const response = await fetch(url, options)\n        const {token} =  await response.json()\n        localStorage.setItem('token', token)\n        getUser(token)\n    }\n\n    return (\n        <UserContext.Provider value={{userLogin}}>\n            {children}\n        </UserContext.Provider>)\n}\n"]},"metadata":{},"sourceType":"module"}