{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nconst type = {\n  email: {\n    regex: /^[A-Za-z0-9](([a-zA-Z0-9,=\\.!\\-#|\\$%\\^&\\*\\+/\\?_`\\{\\}~]+)*)@(?:[0-9a-zA-Z-]+\\.)+[a-zA-Z]{2,9}$/,\n    message: 'Insira um email válido!'\n  },\n  password: {\n    regex: /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/,\n    message: 'Insira um email valido!'\n  }\n};\nexport default function useForm(typeValidate) {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [erro, setErro] = useState('');\n\n  const validate = () => {\n    if (typeValidate === false) {\n      return;\n    }\n\n    if (value.length === 0) {\n      setErro('Preencha um valor!');\n      return;\n    } else if (typeValidate === 'email' && !type.email.regex.test(value)) {\n      setErro(type.email.message);\n      return;\n    } else if (typeValidate === 'password' && !type.password.regex.test(value)) setErro(type.email.message);\n\n    return;\n  };\n\n  const onChange = ({\n    target\n  }) => {\n    if (erro) validate;\n    setValue(target.value);\n  };\n\n  return {\n    value,\n    setValue,\n    onChange,\n    validate: validate(),\n    onBlur: () => validate(),\n    erro\n  };\n}\n\n_s(useForm, \"/njL642BKbve9XAobk1wuGeC270=\");","map":{"version":3,"sources":["/home/luis/projetos/dogs/src/hooks/useForm.tsx"],"names":["useState","type","email","regex","message","password","useForm","typeValidate","value","setValue","erro","setErro","validate","length","test","onChange","target","onBlur"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,MAAMC,IAAI,GAAG;AACTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,+FADJ;AAEHC,IAAAA,OAAO,EAAE;AAFN,GADE;AAKTC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,KAAK,EAAE,yCADD;AAENC,IAAAA,OAAO,EAAE;AAFH;AALD,CAAb;AAeA,eAAe,SAASE,OAAT,CAAiBC,YAAjB,EAAoC;AAAA;;AAC/C,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEU,IAAF,EAAQC,OAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMY,QAAQ,GAAG,MAAM;AACnB,QAAIL,YAAY,KAAK,KAArB,EAA4B;AACxB;AACH;;AACD,QAAKC,KAAK,CAACK,MAAN,KAAiB,CAAtB,EAAyB;AACrBF,MAAAA,OAAO,CAAC,oBAAD,CAAP;AACA;AACH,KAHD,MAGO,IAAIJ,YAAY,KAAK,OAAjB,IAA4B,CAACN,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBW,IAAjB,CAAsBN,KAAtB,CAAjC,EAA+D;AAClEG,MAAAA,OAAO,CAACV,IAAI,CAACC,KAAL,CAAWE,OAAZ,CAAP;AACA;AACH,KAHM,MAGA,IAAIG,YAAY,KAAK,UAAjB,IAA+B,CAACN,IAAI,CAACI,QAAL,CAAcF,KAAd,CAAoBW,IAApB,CAAyBN,KAAzB,CAApC,EACHG,OAAO,CAACV,IAAI,CAACC,KAAL,CAAWE,OAAZ,CAAP;;AACA;AACP,GAbD;;AAgBA,QAAMW,QAAQ,GAAG,CAAE;AAACC,IAAAA;AAAD,GAAF,KAAqB;AAClC,QAAIN,IAAJ,EAAUE,QAAQ;AAClBH,IAAAA,QAAQ,CAACO,MAAM,CAACR,KAAR,CAAR;AACH,GAHD;;AAKA,SAAO;AACHA,IAAAA,KADG;AAEHC,IAAAA,QAFG;AAGHM,IAAAA,QAHG;AAIHH,IAAAA,QAAQ,EAACA,QAAQ,EAJd;AAKHK,IAAAA,MAAM,EAAE,MAAML,QAAQ,EALnB;AAMHF,IAAAA;AANG,GAAP;AAQH;;GAlCuBJ,O","sourcesContent":["import { useState } from \"react\"\n\n\nconst type = {\n    email: {\n        regex: /^[A-Za-z0-9](([a-zA-Z0-9,=\\.!\\-#|\\$%\\^&\\*\\+/\\?_`\\{\\}~]+)*)@(?:[0-9a-zA-Z-]+\\.)+[a-zA-Z]{2,9}$/,\n        message: 'Insira um email válido!'\n    },\n    password: {\n        regex: /[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+/,\n        message: 'Insira um email valido!'\n    }\n}\n\ntype UseFromProps = {\n    typeValidate?: any\n}\n\nexport default function useForm(typeValidate: any) {\n    const [ value, setValue ] = useState(\"\")\n    const [ erro, setErro ] = useState('')\n\n\n    const validate = () => {\n        if (typeValidate === false) {\n            return\n        }\n        if ( value.length === 0) {\n            setErro('Preencha um valor!')\n            return\n        } else if (typeValidate === 'email' && !type.email.regex.test(value)) {\n            setErro(type.email.message)\n            return\n        } else if (typeValidate === 'password' && !type.password.regex.test(value))\n            setErro(type.email.message)\n            return\n    }\n\n\n    const onChange = ( {target}: any ) => {\n        if (erro) validate\n        setValue(target.value)\n    }\n\n    return {\n        value, \n        setValue,\n        onChange,\n        validate:validate(),\n        onBlur: () => validate(),\n        erro\n    }\n}\n"]},"metadata":{},"sourceType":"module"}