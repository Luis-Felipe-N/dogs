{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nconst type = {\n  email: {\n    regex: '[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+',\n    menssage: 'Insira um email válido!'\n  },\n  password: {\n    regex: '[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+',\n    message: 'Insira um email valido!'\n  }\n};\nexport default function useForm({\n  typeValidate\n}) {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [erro, setErro] = useState('');\n\n  const validate = () => {\n    if (!typeValidate) {\n      return;\n    }\n\n    if (typeValidate.length === 0) {\n      setErro('Preencha um valor!');\n      return;\n    } else if (typeValidate === 'email' && !type.email.regex.test(value)) {\n      setErro(type.email.message);\n    } else if (typeValidate === 'password' && !type.password.regex.test(value)) setErro(type.email.message);\n  };\n\n  const onChange = ({\n    target\n  }) => {\n    setValue(target.value);\n    console.log(value);\n  };\n\n  return {\n    value,\n    setValue,\n    onChange\n  };\n}\n\n_s(useForm, \"/njL642BKbve9XAobk1wuGeC270=\");","map":{"version":3,"sources":["/home/luis/projetos/dogs/src/hooks/useForm.tsx"],"names":["useState","type","email","regex","menssage","password","message","useForm","typeValidate","value","setValue","erro","setErro","validate","length","test","onChange","target","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,MAAMC,IAAI,GAAG;AACTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,yCADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP,GADE;AAKTC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,KAAK,EAAE,yCADD;AAENG,IAAAA,OAAO,EAAE;AAFH;AALD,CAAb;AAeA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA+C;AAAA;;AAC1D,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEW,IAAF,EAAQC,OAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMa,QAAQ,GAAG,MAAM;AACnB,QAAI,CAACL,YAAL,EAAmB;AACf;AACH;;AACD,QAAKA,YAAY,CAACM,MAAb,KAAwB,CAA7B,EAAgC;AAC5BF,MAAAA,OAAO,CAAC,oBAAD,CAAP;AACA;AACH,KAHD,MAGO,IAAIJ,YAAY,KAAK,OAAjB,IAA4B,CAACP,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBY,IAAjB,CAAsBN,KAAtB,CAAjC,EAA+D;AAClEG,MAAAA,OAAO,CAACX,IAAI,CAACC,KAAL,CAAWI,OAAZ,CAAP;AACH,KAFM,MAEA,IAAIE,YAAY,KAAK,UAAjB,IAA+B,CAACP,IAAI,CAACI,QAAL,CAAcF,KAAd,CAAoBY,IAApB,CAAyBN,KAAzB,CAApC,EACPG,OAAO,CAACX,IAAI,CAACC,KAAL,CAAWI,OAAZ,CAAP;AACH,GAXD;;AAcA,QAAMU,QAAQ,GAAG,CAAE;AAACC,IAAAA;AAAD,GAAF,KAAqB;AAClCP,IAAAA,QAAQ,CAACO,MAAM,CAACR,KAAR,CAAR;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH,GAHD;;AAKA,SAAO;AACHA,IAAAA,KADG;AAEHC,IAAAA,QAFG;AAGHM,IAAAA;AAHG,GAAP;AAKH;;GA7BuBT,O","sourcesContent":["import { useState } from \"react\"\n\n\nconst type = {\n    email: {\n        regex: '[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+',\n        menssage: 'Insira um email válido!'\n    },\n    password: {\n        regex: '[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+',\n        message: 'Insira um email valido!'\n    }\n}\n\ntype UseFromProps = {\n    typeValidate?: string\n}\n\nexport default function useForm({typeValidate}: UseFromProps) {\n    const [ value, setValue ] = useState(\"\")\n    const [ erro, setErro ] = useState('')\n\n\n    const validate = () => {\n        if (!typeValidate) {\n            return\n        }\n        if ( typeValidate.length === 0) {\n            setErro('Preencha um valor!')\n            return\n        } else if (typeValidate === 'email' && !type.email.regex.test(value)) {\n            setErro(type.email.message)\n        } else if (typeValidate === 'password' && !type.password.regex.test(value))\n        setErro(type.email.message)\n    }\n\n\n    const onChange = ( {target}: any ) => {\n        setValue(target.value)\n        console.log(value)\n    }\n\n    return {\n        value, \n        setValue,\n        onChange\n    }\n}\n"]},"metadata":{},"sourceType":"module"}