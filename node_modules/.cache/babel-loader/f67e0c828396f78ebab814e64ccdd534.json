{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nconst type = {\n  email: {\n    regex: /^[A-Za-z0-9](([a-zA-Z0-9,=\\.!\\-#|\\$%\\^&\\*\\+/\\?_`\\{\\}~]+)*)@(?:[0-9a-zA-Z-]+\\.)+[a-zA-Z]{2,9}$/,\n    message: \"Insira um email válido!\"\n  }\n};\nexport default function useForm(typeValidate) {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [erro, setErro] = useState(String);\n\n  const validate = () => {\n    if (typeValidate === false) {\n      return false;\n    }\n\n    if (value.length === 0) {\n      setErro(\"Preencha um valor!\");\n      return false;\n    } else if (typeValidate === \"email\" && !type.email.regex.test(value)) {\n      setErro(type.email.message);\n      return false;\n    } else {\n      setErro(\"\");\n      return true;\n    }\n  };\n\n  const onChange = ({\n    target\n  }) => {\n    if (erro) validate();\n    setValue(target.value);\n  };\n\n  return {\n    value,\n    setValue,\n    onChange,\n    validate: validate,\n    onBlur: () => validate(),\n    erro\n  };\n}\n\n_s(useForm, \"8QEkI1Zp3C5y7VFqdNg93LtRLz0=\");","map":{"version":3,"sources":["/home/luis/projetos/dogs/src/hooks/useForm.tsx"],"names":["useState","type","email","regex","message","useForm","typeValidate","value","setValue","erro","setErro","String","validate","length","test","onChange","target","onBlur"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EACH,+FAFG;AAGLC,IAAAA,OAAO,EAAE;AAHJ;AADI,CAAb;AAQA,eAAe,SAASC,OAAT,CAAiBC,YAAjB,EAAqC;AAAA;;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACW,MAAD,CAAhC;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIN,YAAY,KAAK,KAArB,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,QAAIC,KAAK,CAACM,MAAN,KAAiB,CAArB,EAAwB;AACtBH,MAAAA,OAAO,CAAC,oBAAD,CAAP;AACA,aAAO,KAAP;AACD,KAHD,MAGO,IAAIJ,YAAY,KAAK,OAAjB,IAA4B,CAACL,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBW,IAAjB,CAAsBP,KAAtB,CAAjC,EAA+D;AACpEG,MAAAA,OAAO,CAACT,IAAI,CAACC,KAAL,CAAWE,OAAZ,CAAP;AACA,aAAO,KAAP;AACD,KAHM,MAGA;AACLM,MAAAA,OAAO,CAAC,EAAD,CAAP;AACA,aAAO,IAAP;AACD;AACF,GAdD;;AAgBA,QAAMK,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAqB;AACpC,QAAIP,IAAJ,EAAUG,QAAQ;AAClBJ,IAAAA,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;AACD,GAHD;;AAKA,SAAO;AACLA,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLO,IAAAA,QAHK;AAILH,IAAAA,QAAQ,EAAEA,QAJL;AAKLK,IAAAA,MAAM,EAAE,MAAML,QAAQ,EALjB;AAMLH,IAAAA;AANK,GAAP;AAQD;;GAjCuBJ,O","sourcesContent":["import { useState } from \"react\";\n\nconst type = {\n  email: {\n    regex:\n      /^[A-Za-z0-9](([a-zA-Z0-9,=\\.!\\-#|\\$%\\^&\\*\\+/\\?_`\\{\\}~]+)*)@(?:[0-9a-zA-Z-]+\\.)+[a-zA-Z]{2,9}$/,\n    message: \"Insira um email válido!\",\n  },\n};\n\nexport default function useForm(typeValidate?: any) {\n  const [value, setValue] = useState(\"\");\n  const [erro, setErro] = useState(String);\n\n  const validate = () => {\n    if (typeValidate === false) {\n      return false;\n    }\n    if (value.length === 0) {\n      setErro(\"Preencha um valor!\");\n      return false;\n    } else if (typeValidate === \"email\" && !type.email.regex.test(value)) {\n      setErro(type.email.message);\n      return false;\n    } else {\n      setErro(\"\");\n      return true;\n    }\n  };\n\n  const onChange = ({ target }: any) => {\n    if (erro) validate();\n    setValue(target.value);\n  };\n\n  return {\n    value,\n    setValue,\n    onChange,\n    validate: validate,\n    onBlur: () => validate(),\n    erro,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}