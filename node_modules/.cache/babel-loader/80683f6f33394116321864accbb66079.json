{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nconst tip = {\n  email: {\n    regex: '[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+',\n    menssage: 'Insira um email valido!'\n  }\n};\nexport default function useForm({\n  type = false\n}) {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n\n  const validate = () => {\n    if (!type) {\n      return;\n    }\n\n    if (type.length === 0) {\n      setErro('Preencha um valor!');\n    } else if (type[type]) {}\n  };\n\n  const onChange = ({\n    target\n  }) => {\n    setValue(target.value);\n    console.log(value);\n  };\n\n  return {\n    value,\n    setValue,\n    onChange\n  };\n}\n\n_s(useForm, \"UW2QyavWVInYp4UHp+V0+/jozqw=\");","map":{"version":3,"sources":["/home/luis/projetos/dogs/src/hooks/useForm.tsx"],"names":["useState","tip","email","regex","menssage","useForm","type","value","setValue","validate","length","setErro","onChange","target","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,MAAMC,GAAG,GAAG;AACRC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,yCADJ;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AADC,CAAZ;AAWA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA,IAAI,GAAG;AAAR,CAAjB,EAA+C;AAAA;;AAC1D,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMS,QAAQ,GAAG,MAAM;AACnB,QAAI,CAACH,IAAL,EAAW;AACP;AACH;;AACD,QAAKA,IAAI,CAACI,MAAL,KAAgB,CAArB,EAAwB;AACpBC,MAAAA,OAAO,CAAC,oBAAD,CAAP;AACH,KAFD,MAEO,IAAIL,IAAI,CAACA,IAAD,CAAR,EAAgB,CAEtB;AAEJ,GAVD;;AAaA,QAAMM,QAAQ,GAAG,CAAE;AAACC,IAAAA;AAAD,GAAF,KAAqB;AAClCL,IAAAA,QAAQ,CAACK,MAAM,CAACN,KAAR,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,GAHD;;AAKA,SAAO;AACHA,IAAAA,KADG;AAEHC,IAAAA,QAFG;AAGHI,IAAAA;AAHG,GAAP;AAKH;;GA3BuBP,O","sourcesContent":["import { useState } from \"react\"\n\n\nconst tip = {\n    email: {\n        regex: '[^@ \\t\\r\\n]+@[^@ \\t\\r\\n]+\\.[^@ \\t\\r\\n]+',\n        menssage: 'Insira um email valido!'\n    }\n}\n\ntype UseFromProps = {\n    type?: string\n}\n\nexport default function useForm({type = false}: UseFromProps) {\n    const [ value, setValue ] = useState(\"\")\n\n\n    const validate = () => {\n        if (!type) {\n            return\n        }\n        if ( type.length === 0) {\n            setErro('Preencha um valor!')\n        } else if (type[type]) {\n\n        }\n\n    }\n\n\n    const onChange = ( {target}: any ) => {\n        setValue(target.value)\n        console.log(value)\n    }\n\n    return {\n        value, \n        setValue,\n        onChange\n    }\n}\n"]},"metadata":{},"sourceType":"module"}