{"ast":null,"code":"var _jsxFileName = \"/home/luis/projetos/dogs/src/context/UserContext.tsx\";\nimport { createContext } from \"react\";\nimport { GET_USER, TOKEN_POST } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport default function UserStorage({\n  children\n}) {\n  const getUser = async token => {\n    const {\n      url,\n      options\n    } = GET_USER(token);\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData;\n  };\n\n  const userLogin = async user => {\n    const {\n      url,\n      options\n    } = TOKEN_POST(user);\n    const response = await fetch(url, options);\n    const {\n      token\n    } = await response.json();\n    localStorage.setItem(\"token\", token);\n    getUser(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = UserStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStorage\");","map":{"version":3,"sources":["/home/luis/projetos/dogs/src/context/UserContext.tsx"],"names":["createContext","GET_USER","TOKEN_POST","UserContext","UserStorage","children","getUser","token","url","options","response","fetch","json","setData","userLogin","user","localStorage","setItem"],"mappings":";AAAA,SAASA,aAAT,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;;AAWA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,EAAD,CAAjC;AAEP,eAAe,SAASI,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAqD;AAClE,QAAMC,OAAO,GAAG,MAAOC,KAAP,IAAyB;AACvC,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBR,QAAQ,CAACM,KAAD,CAAjC;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,IAAAA,OAAO;AACR,GALD;;AAQA,QAAMC,SAAS,GAAG,MAAOC,IAAP,IAA+B;AAC/C,UAAM;AAAEP,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBP,UAAU,CAACa,IAAD,CAAnC;AAEA,UAAML,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAY,MAAMG,QAAQ,CAACE,IAAT,EAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,KAA9B;AACAD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACD,GAPD;;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEO,MAAAA;AAAF,KAA7B;AAAA,cACGT;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KAxBuBD,W","sourcesContent":["import { createContext, ReactNode } from \"react\";\nimport { GET_USER, TOKEN_POST } from \"../utils/api\";\n\ntype UserStorageProps = {\n  children: ReactNode;\n};\n\ntype UserLoginType = {\n  username: string;\n  password: string;\n};\n\nexport const UserContext = createContext({} as any);\n\nexport default function UserStorage({ children }: UserStorageProps) {\n  const getUser = async (token: string) => {\n    const { url, options } = GET_USER(token);\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData\n  };\n\n\n  const userLogin = async (user: UserLoginType) => {\n    const { url, options } = TOKEN_POST(user);\n\n    const response = await fetch(url, options);\n    const { token } = await response.json();\n    localStorage.setItem(\"token\", token);\n    getUser(token);\n  };\n\n\n  return (\n    <UserContext.Provider value={{ userLogin }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}