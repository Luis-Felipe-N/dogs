{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nconst type = {\n  email: {\n    regex: /^[A-Za-z0-9](([a-zA-Z0-9,=\\.!\\-#|\\$%\\^&\\*\\+/\\?_`\\{\\}~]+)*)@(?:[0-9a-zA-Z-]+\\.)+[a-zA-Z]{2,9}$/,\n    message: 'Insira um email válido!'\n  }\n};\nexport default function useForm(typeValidate) {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [erro, setErro] = useState(nuu);\n\n  const validate = () => {\n    if (typeValidate === false) {\n      return false;\n    }\n\n    if (value.length === 0) {\n      setErro('Preencha um valor!');\n      return false;\n    } else if (typeValidate === 'email' && !type.email.regex.test(value)) {\n      setErro(type.email.message);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const onChange = ({\n    target\n  }) => {\n    if (erro) validate();\n    setValue(target.value);\n  };\n\n  return {\n    value,\n    setValue,\n    onChange,\n    validate: validate,\n    onBlur: () => validate(),\n    erro\n  };\n}\n\n_s(useForm, \"c1D8uAxGpyC6EZNaCa8eq9Uqth4=\");","map":{"version":3,"sources":["/home/luis/projetos/dogs/src/hooks/useForm.tsx"],"names":["useState","type","email","regex","message","useForm","typeValidate","value","setValue","erro","setErro","nuu","validate","length","test","onChange","target","onBlur"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAGA,MAAMC,IAAI,GAAG;AACTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,+FADJ;AAEHC,IAAAA,OAAO,EAAE;AAFN;AADE,CAAb;AAWA,eAAe,SAASC,OAAT,CAAiBC,YAAjB,EAAoC;AAAA;;AAC/C,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAES,IAAF,EAAQC,OAAR,IAAoBV,QAAQ,CAACW,GAAD,CAAlC;;AAGA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIN,YAAY,KAAK,KAArB,EAA4B;AACxB,aAAO,KAAP;AACH;;AACD,QAAKC,KAAK,CAACM,MAAN,KAAiB,CAAtB,EAAyB;AACrBH,MAAAA,OAAO,CAAC,oBAAD,CAAP;AACA,aAAO,KAAP;AACH,KAHD,MAGO,IAAIJ,YAAY,KAAK,OAAjB,IAA4B,CAACL,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBW,IAAjB,CAAsBP,KAAtB,CAAjC,EAA+D;AAClEG,MAAAA,OAAO,CAACT,IAAI,CAACC,KAAL,CAAWE,OAAZ,CAAP;AACA,aAAO,KAAP;AACH,KAHM,MAGA;AACH,aAAO,IAAP;AACH;AAEJ,GAdD;;AAiBA,QAAMW,QAAQ,GAAG,CAAE;AAACC,IAAAA;AAAD,GAAF,KAAqB;AAClC,QAAIP,IAAJ,EAAUG,QAAQ;AAClBJ,IAAAA,QAAQ,CAACQ,MAAM,CAACT,KAAR,CAAR;AACH,GAHD;;AAKA,SAAO;AACHA,IAAAA,KADG;AAEHC,IAAAA,QAFG;AAGHO,IAAAA,QAHG;AAIHH,IAAAA,QAAQ,EAAEA,QAJP;AAKHK,IAAAA,MAAM,EAAE,MAAML,QAAQ,EALnB;AAMHH,IAAAA;AANG,GAAP;AAQH;;GAnCuBJ,O","sourcesContent":["import { useState } from \"react\"\n\n\nconst type = {\n    email: {\n        regex: /^[A-Za-z0-9](([a-zA-Z0-9,=\\.!\\-#|\\$%\\^&\\*\\+/\\?_`\\{\\}~]+)*)@(?:[0-9a-zA-Z-]+\\.)+[a-zA-Z]{2,9}$/,\n        message: 'Insira um email válido!'\n    },\n}\n\ntype UseFromProps = {\n    typeValidate?: any\n}\n\nexport default function useForm(typeValidate: any) {\n    const [ value, setValue ] = useState(\"\")\n    const [ erro, setErro ] = useState(nuu)\n\n\n    const validate = () => {\n        if (typeValidate === false) {\n            return false\n        }\n        if ( value.length === 0) {\n            setErro('Preencha um valor!')\n            return false\n        } else if (typeValidate === 'email' && !type.email.regex.test(value)) {\n            setErro(type.email.message)\n            return false\n        } else {\n            return true\n        }\n            \n    }\n\n\n    const onChange = ( {target}: any ) => {\n        if (erro) validate()\n        setValue(target.value)\n    }\n\n    return {\n        value, \n        setValue,\n        onChange,\n        validate: validate,\n        onBlur: () => validate(),\n        erro\n    }\n}\n"]},"metadata":{},"sourceType":"module"}